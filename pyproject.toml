[project]
name = "receivers"
version = "0.1.0"
description = "GPS/GNSS receiver management and data download toolkit for Veðurstofan Íslands"
readme = "README.md"
license = {text = "MIT"}
authors = [
    { name = "Benedikt Gunnar Ófeigsson", email = "bgo@vedur.is" },
    { name = "Fjalar Sigurdsson", email = "fjalar@vedur.is" },
]
maintainers = [
    { name = "Benedikt Gunnar Ófeigsson", email = "bgo@vedur.is" }
]
keywords = [
    "gps", "gnss", "receivers", "septentrio", "polarx5", "data-download", 
    "station-health", "ftp", "rinex", "geodesy", "geophysics",
    "vedurstofan", "iceland", "met-office"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Networking :: Monitoring",
    "Environment :: Console",
    "Natural Language :: English",
]
requires-python = ">=3.8"
dependencies = [
    "python-dateutil>=2.9.0",
    "pathlib2>=2.3.7; python_version<'3.4'",
    "rich>=13.0.0",
    "requests>=2.31.0",
    "progressbar2>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "ruff>=0.1.0", 
    "black>=23.0.0",
    "mypy>=1.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "bandit>=1.7.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
]
local = [
    "gtimes>=0.4.0",  # Local package - install separately
    # "gps_parser",   # Local package - install separately  
]
all = [
    "receivers[dev,test,docs,local]",
]

[project.urls]
Homepage = "https://github.com/vedur-is/receivers"
Repository = "https://github.com/vedur-is/receivers"
Issues = "https://github.com/vedur-is/receivers/issues"
Documentation = "https://vedur-is.github.io/receivers"

[project.scripts]
receivers = "receivers.cli.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/receivers"]

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long (handled by black)
    "N803",  # argument name should be lowercase (GPS functions use camelCase)
    "N806",  # variable in function should be lowercase (legacy GPS code)
    "B904",  # Within except clause, raise exceptions with raise ... from err
    "F401",  # imported but unused (needed for conditional imports)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["N802", "N803"]  # Allow uppercase in test names

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "progressbar2.*",
    "gps_parser.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "-ra",
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests with receivers", 
    "ftp: Tests requiring FTP connections",
    "slow: Slow tests that may take time",
    "septentrio: Septentrio-specific tests",
    "polarx5: PolaRX5 receiver tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
show_missing = true
precision = 2